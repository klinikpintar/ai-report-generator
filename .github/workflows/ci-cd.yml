name: Django CI/CD

on:
  push:
    branches:
      - development
      - staging
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Check Django App
        env:
          DJANGO_SETTINGS_MODULE: app.settings
        run: |
          source venv/bin/activate
          python manage.py check

  test:
    needs: build
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_pass
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U test_user"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Run Migrations
        env:
          GITHUB_ACTIONS: "true"
          DEBUG: "false"
          DB_NAME: test_db
          DB_USER: test_user
          DB_PASSWORD: test_pass
        run: |
          source venv/bin/activate
          python manage.py migrate

      - name: Run Tests
        env:
          GITHUB_ACTIONS: "true"
          DEBUG: "false"
          DB_NAME: test_db
          DB_USER: test_user
          DB_PASSWORD: test_pass
        run: |
          source venv/bin/activate
          pytest

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Railway CLI
        run: curl -fsSL https://railway.app/install.sh | sh

      - name: Deploy to Railway Staging
        if: github.ref == 'refs/heads/staging'
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_STAGING_TOKEN }}
        run: railway up --service ai-report-generator

