name: SonarCloud analysis
on:
  push:
    branches:
      - development
      - staging
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest  # Menggunakan Ubuntu agar kompatibel dengan Python dan coverage

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_pass
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U test_user"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Run Migrations
        env:
          GITHUB_ACTIONS: "true"
          DEBUG: "false"
          DB_NAME: test_db
          DB_USER: test_user
          DB_PASSWORD: test_pass
        run: |
          source venv/bin/activate
          python manage.py migrate

      - name: Run Tests and Generate Coverage Report
        env:
          GITHUB_ACTIONS: "true"
          DEBUG: "false"
          DB_NAME: test_db
          DB_USER: test_user
          DB_PASSWORD: test_pass
        run: |
          source venv/bin/activate
          coverage run --source='.' manage.py test
          coverage xml -o coverage.xml

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
