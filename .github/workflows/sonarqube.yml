name: SonarCloud analysis
on:
  push:
    branches:
      - development
      - staging
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest  # Menggunakan Ubuntu agar kompatibel dengan Python dan coverage

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_pass
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U test_user"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install Dependencies
        run: |
          npm install -g pnpm
          pnpm install --frozen-lockfile

      # Nanti kalo udah butuh database, uncomment ini
      # - name: Run Migrations
      #   env:
      #     GITHUB_ACTIONS: "true"
      #     DEBUG: "false"
      #     DB_NAME: test_db
      #     DB_USER: test_user
      #     DB_PASSWORD: test_pass
      #   run: |
      #     source venv/bin/activate
      #     python manage.py migrate

      - name: Run Tests and Generate Coverage Report
        run: |
          pnpm run test:coverage

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}